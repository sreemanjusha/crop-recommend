# -*- coding: utf-8 -*-
"""Hackfest1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m6VA4Pe1vOcdCTI0MJO8he2WeqGsu0h6
"""

#Data reading
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn import metrics
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.ensemble import RandomForestClassifier
import pickle
import math
df = pd.read_csv('Crop_recommendation.csv')
profits = pd.read_csv('profits.csv')
sample_input= [[87,50,	21,	16.534223,	85.987654,	7.502985	,200.935536]]

class Multiple_regressor():
  def __init__(self):
    self.df = pd.read_csv('Crop_recommendation.csv')
    self.profits = pd.read_csv('profits.csv')
    
  
  def NearestNeighbors(self,test,kNeighhbors):

  #arr = np.zeros(df.shape[0],np.int)
    self.arr = list()
    for i,x in enumerate(self.df.values):
      #print(test,x)
      dist = np.linalg.norm(test - x[:-1])
      self.arr.append((dist,i))
    self.arr.sort()
    self.NearestClasses = list()
    for i,x in enumerate(self.arr[:kNeighhbors]):
      self.NearestClasses.append((i,self.df.iloc[x[1],-1]))
    print(self.NearestClasses)
    self.prof_inv_ratio = dict()
    for i,x in enumerate(self.profits.values):      
      self.prof_inv_ratio.update({x[0]:x[-1]/x[1]})
    k=list()  
    for x in self.NearestClasses:
        a=[x[1],self.prof_inv_ratio[x[1]]]
        k.append(a)
    return k    
  
  def display(self):
      k=list()  
      for x in self.NearestClasses:
          a=[x[1],self.prof_inv_ratio[x[1]]]
          k.append(a)
      return k

o=Multiple_regressor()
##o.NearestNeighbors(sample_input[0],3)

pickle.dump(o,open('model.pkl','wb'))
model=pickle.load(open('model.pkl','rb'))
model.NearestNeighbors([90,42,43,20.879743,82.002,6.50,202.93],3)